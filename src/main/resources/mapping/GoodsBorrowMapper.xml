<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goods.mapper.GoodsBorrowMapper">
  <resultMap id="BaseResultMap" type="goods.pojo.GoodsBorrow">
    <id column="gbid" jdbcType="INTEGER" property="gbid" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="borrow_date" jdbcType="TIMESTAMP" property="borrowDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="is_borrow" jdbcType="BIT" property="isBorrow" />
    <result column="will_return_date" jdbcType="TIMESTAMP" property="willReturnDate" />
    <result column="borrow_user_id" jdbcType="VARCHAR" property="borrowUserId" />
    <result column="return_user_id" jdbcType="VARCHAR" property="returnUserId" />
    <result column="return_number" jdbcType="INTEGER" property="returnNumber" />
    <result column="return_date" jdbcType="TIMESTAMP" property="returnDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    gbid, goods_id, user_id, number, borrow_date, status, is_borrow, will_return_date, 
    borrow_user_id, return_user_id, return_number, return_date
  </sql>
  <select id="selectByExample" parameterType="goods.pojo.GoodsBorrowExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from goods_borrow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="(offset != null and limit != null) or (offset != 0 and limit != 0)">
      limit ${offset},${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_borrow
    where gbid = #{gbid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods_borrow
    where gbid = #{gbid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="goods.pojo.GoodsBorrowExample">
    delete from goods_borrow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="goods.pojo.GoodsBorrow">
    insert into goods_borrow (gbid, goods_id, user_id, 
      number, borrow_date, status, 
      is_borrow, will_return_date, borrow_user_id, 
      return_user_id, return_number, return_date
      )
    values (#{gbid,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER}, #{borrowDate,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{isBorrow,jdbcType=BIT}, #{willReturnDate,jdbcType=TIMESTAMP}, #{borrowUserId,jdbcType=VARCHAR}, 
      #{returnUserId,jdbcType=VARCHAR}, #{returnNumber,jdbcType=INTEGER}, #{returnDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="goods.pojo.GoodsBorrow">
    insert into goods_borrow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gbid != null">
        gbid,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="borrowDate != null">
        borrow_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isBorrow != null">
        is_borrow,
      </if>
      <if test="willReturnDate != null">
        will_return_date,
      </if>
      <if test="borrowUserId != null">
        borrow_user_id,
      </if>
      <if test="returnUserId != null">
        return_user_id,
      </if>
      <if test="returnNumber != null">
        return_number,
      </if>
      <if test="returnDate != null">
        return_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gbid != null">
        #{gbid,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="borrowDate != null">
        #{borrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="isBorrow != null">
        #{isBorrow,jdbcType=BIT},
      </if>
      <if test="willReturnDate != null">
        #{willReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="borrowUserId != null">
        #{borrowUserId,jdbcType=VARCHAR},
      </if>
      <if test="returnUserId != null">
        #{returnUserId,jdbcType=VARCHAR},
      </if>
      <if test="returnNumber != null">
        #{returnNumber,jdbcType=INTEGER},
      </if>
      <if test="returnDate != null">
        #{returnDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="goods.pojo.GoodsBorrowExample" resultType="java.lang.Long">
    select count(*) from goods_borrow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_borrow
    <set>
      <if test="record.gbid != null">
        gbid = #{record.gbid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.borrowDate != null">
        borrow_date = #{record.borrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.isBorrow != null">
        is_borrow = #{record.isBorrow,jdbcType=BIT},
      </if>
      <if test="record.willReturnDate != null">
        will_return_date = #{record.willReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.borrowUserId != null">
        borrow_user_id = #{record.borrowUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.returnUserId != null">
        return_user_id = #{record.returnUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.returnNumber != null">
        return_number = #{record.returnNumber,jdbcType=INTEGER},
      </if>
      <if test="record.returnDate != null">
        return_date = #{record.returnDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_borrow
    set gbid = #{record.gbid,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=INTEGER},
      borrow_date = #{record.borrowDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      is_borrow = #{record.isBorrow,jdbcType=BIT},
      will_return_date = #{record.willReturnDate,jdbcType=TIMESTAMP},
      borrow_user_id = #{record.borrowUserId,jdbcType=VARCHAR},
      return_user_id = #{record.returnUserId,jdbcType=VARCHAR},
      return_number = #{record.returnNumber,jdbcType=INTEGER},
      return_date = #{record.returnDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="goods.pojo.GoodsBorrow">
    update goods_borrow
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="borrowDate != null">
        borrow_date = #{borrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="isBorrow != null">
        is_borrow = #{isBorrow,jdbcType=BIT},
      </if>
      <if test="willReturnDate != null">
        will_return_date = #{willReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="borrowUserId != null">
        borrow_user_id = #{borrowUserId,jdbcType=VARCHAR},
      </if>
      <if test="returnUserId != null">
        return_user_id = #{returnUserId,jdbcType=VARCHAR},
      </if>
      <if test="returnNumber != null">
        return_number = #{returnNumber,jdbcType=INTEGER},
      </if>
      <if test="returnDate != null">
        return_date = #{returnDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where gbid = #{gbid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="goods.pojo.GoodsBorrow">
    update goods_borrow
    set goods_id = #{goodsId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      borrow_date = #{borrowDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      is_borrow = #{isBorrow,jdbcType=BIT},
      will_return_date = #{willReturnDate,jdbcType=TIMESTAMP},
      borrow_user_id = #{borrowUserId,jdbcType=VARCHAR},
      return_user_id = #{returnUserId,jdbcType=VARCHAR},
      return_number = #{returnNumber,jdbcType=INTEGER},
      return_date = #{returnDate,jdbcType=TIMESTAMP}
    where gbid = #{gbid,jdbcType=INTEGER}
  </update>
</mapper>